; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\obj\scankey.o --depend=.\obj\scankey.d --cpu=Cortex-M0 --apcs=interwork -O0 -I.\ -I..\..\CMSIS -I..\..\Driver\Include -I..\..\Driver\Include\Driver -I..\..\Driver\Include\NUC1xx-LB_002 -I..\..\Driver\Include\System -IG:\Keil\ARM\INC -IG:\Keil\ARM\INC\Nuvoton\NUC1xx --omf_browse=.\obj\scankey.crf ..\..\Driver\Src\NUC1xx-LB_002\ScanKey.c]
                          THUMB

                          AREA ||i.CloseKeyPad||, CODE, READONLY, ALIGN=1

                  CloseKeyPad PROC
;;;23     
;;;24     void CloseKeyPad(void)
000000  b510              PUSH     {r4,lr}
;;;25     {
;;;26     	uint8_t i;
;;;27     
;;;28     	for(i=0;i<6;i++)
000002  2400              MOVS     r4,#0
000004  e005              B        |L1.18|
                  |L1.6|
;;;29     	DrvGPIO_Close(E_GPA, i);
000006  4621              MOV      r1,r4
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       DrvGPIO_Close
00000e  1c60              ADDS     r0,r4,#1              ;28
000010  b2c4              UXTB     r4,r0                 ;28
                  |L1.18|
000012  2c06              CMP      r4,#6                 ;28
000014  dbf7              BLT      |L1.6|
;;;30     }
000016  bd10              POP      {r4,pc}
;;;31     
                          ENDP


                          AREA ||i.OpenKeyPad||, CODE, READONLY, ALIGN=1

                  OpenKeyPad PROC
;;;15     
;;;16     void OpenKeyPad(void)
000000  b510              PUSH     {r4,lr}
;;;17     {
;;;18     	uint8_t i;
;;;19     	/* Initial key pad */
;;;20     	for(i=0;i<6;i++)
000002  2400              MOVS     r4,#0
000004  e006              B        |L2.20|
                  |L2.6|
;;;21     	DrvGPIO_Open(E_GPA, i, E_IO_QUASI);
000006  2203              MOVS     r2,#3
000008  4621              MOV      r1,r4
00000a  2000              MOVS     r0,#0
00000c  f7fffffe          BL       DrvGPIO_Open
000010  1c60              ADDS     r0,r4,#1              ;20
000012  b2c4              UXTB     r4,r0                 ;20
                  |L2.20|
000014  2c06              CMP      r4,#6                 ;20
000016  dbf6              BLT      |L2.6|
;;;22     }
000018  bd10              POP      {r4,pc}
;;;23     
                          ENDP


                          AREA ||i.Scankey||, CODE, READONLY, ALIGN=2

                  Scankey PROC
;;;31     
;;;32     uint8_t Scankey(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;33     {
;;;34     	uint8_t act[4]={0x3b, 0x3d, 0x3e};    
000002  481f              LDR      r0,|L3.128|
000004  6800              LDR      r0,[r0,#0]  ; <Data1>
000006  9000              STR      r0,[sp,#0]
;;;35     	uint8_t i,temp,pin;
;;;36     
;;;37     	for(i=0;i<3;i++)
000008  2400              MOVS     r4,#0
00000a  e034              B        |L3.118|
                  |L3.12|
;;;38     	{
;;;39     		temp=act[i];
00000c  4668              MOV      r0,sp
00000e  5d06              LDRB     r6,[r0,r4]
;;;40     		for(pin=0;pin<6;pin++)
000010  2500              MOVS     r5,#0
000012  e00f              B        |L3.52|
                  |L3.20|
;;;41     		{
;;;42     			if((temp&0x01)==0x01)
000014  07f0              LSLS     r0,r6,#31
000016  0fc0              LSRS     r0,r0,#31
000018  2801              CMP      r0,#1
00001a  d104              BNE      |L3.38|
;;;43     				DrvGPIO_SetBit(E_GPA,pin);
00001c  4629              MOV      r1,r5
00001e  2000              MOVS     r0,#0
000020  f7fffffe          BL       DrvGPIO_SetBit
000024  e003              B        |L3.46|
                  |L3.38|
;;;44     			else
;;;45     				DrvGPIO_ClrBit(E_GPA,pin);
000026  4629              MOV      r1,r5
000028  2000              MOVS     r0,#0
00002a  f7fffffe          BL       DrvGPIO_ClrBit
                  |L3.46|
;;;46     			temp>>=1;
00002e  1076              ASRS     r6,r6,#1
000030  1c68              ADDS     r0,r5,#1              ;40
000032  b2c5              UXTB     r5,r0                 ;40
                  |L3.52|
000034  2d06              CMP      r5,#6                 ;40
000036  dbed              BLT      |L3.20|
;;;47     		}
;;;48     		delay();
000038  f7fffffe          BL       delay
;;;49     		if(DrvGPIO_GetBit(E_GPA,3)==0)
00003c  2103              MOVS     r1,#3
00003e  2000              MOVS     r0,#0
000040  f7fffffe          BL       DrvGPIO_GetBit
000044  2800              CMP      r0,#0
000046  d102              BNE      |L3.78|
;;;50     			return(i+1);
000048  1c60              ADDS     r0,r4,#1
00004a  b2c0              UXTB     r0,r0
                  |L3.76|
;;;51     		if(DrvGPIO_GetBit(E_GPA,4)==0)
;;;52     			return(i+4);
;;;53     		if(DrvGPIO_GetBit(E_GPA,5)==0)
;;;54     			return(i+7);
;;;55     	}
;;;56     		return 0;
;;;57     }
00004c  bdf8              POP      {r3-r7,pc}
                  |L3.78|
00004e  2104              MOVS     r1,#4                 ;51
000050  2000              MOVS     r0,#0                 ;51
000052  f7fffffe          BL       DrvGPIO_GetBit
000056  2800              CMP      r0,#0                 ;51
000058  d102              BNE      |L3.96|
00005a  1d20              ADDS     r0,r4,#4              ;52
00005c  b2c0              UXTB     r0,r0                 ;52
00005e  e7f5              B        |L3.76|
                  |L3.96|
000060  2105              MOVS     r1,#5                 ;53
000062  2000              MOVS     r0,#0                 ;53
000064  f7fffffe          BL       DrvGPIO_GetBit
000068  2800              CMP      r0,#0                 ;53
00006a  d102              BNE      |L3.114|
00006c  1de0              ADDS     r0,r4,#7              ;54
00006e  b2c0              UXTB     r0,r0                 ;54
000070  e7ec              B        |L3.76|
                  |L3.114|
000072  1c60              ADDS     r0,r4,#1              ;37
000074  b2c4              UXTB     r4,r0                 ;37
                  |L3.118|
000076  2c03              CMP      r4,#3                 ;37
000078  dbc8              BLT      |L3.12|
00007a  2000              MOVS     r0,#0                 ;56
00007c  e7e6              B        |L3.76|
                          ENDP

00007e  0000              DCW      0x0000
                  |L3.128|
                          DCD      ||.constdata||

                          AREA ||i.delay||, CODE, READONLY, ALIGN=1

                  delay PROC
;;;9      
;;;10     void delay(void)
000000  2000              MOVS     r0,#0
;;;11     {
;;;12     	int j;
;;;13     	for(j=0;j<1000;j++);
000002  e000              B        |L4.6|
                  |L4.4|
000004  1c40              ADDS     r0,r0,#1
                  |L4.6|
000006  217d              MOVS     r1,#0x7d
000008  00c9              LSLS     r1,r1,#3
00000a  4288              CMP      r0,r1
00000c  dbfa              BLT      |L4.4|
;;;14     }
00000e  4770              BX       lr
;;;15     
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  3b3d3e00          DCB      0x3b,0x3d,0x3e,0x00
